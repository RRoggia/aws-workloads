AWSTemplateFormatVersion: "2010-09-09"
Description: Creates a Role for EKS

Resources:
  EKSRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: eks-cluster-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
  
  EC2NodeGroupRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: eks-add-node-group-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
        - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
        - "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"

Outputs:
  EKSRole:
    Description: Cluster Role
    Value: !Ref EKSRole
    Export:
      Name: !Sub '${AWS::StackName}-EKS-Cluster-Role'
  
  EKSRoleArn:
    Description: Cluster Role Arn
    Value: !GetAtt EKSRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-EKS-Cluster-Role-Arn'
  
  EC2NodeGroupRoleArn:
    Description: Node Group Role Arn
    Value: !GetAtt EC2NodeGroupRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-EKS-NodeGroup-Role-Arn'


        