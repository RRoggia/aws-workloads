AWSTemplateFormatVersion: 2010-09-09
Description: Set up Infrastructure for app
Resources:
  VPCThreeTierDemo:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 26.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags: 
        - Key: Name
          Value: ttd-vpc

# Create Subnets
  SubnetPublicAZA:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 0, !GetAZs ]
      CidrBlock: 26.0.0.0/24
      VpcId: !Ref VPCThreeTierDemo
      Tags: 
        - Key: Name
          Value: ttd-app-public-subnet-a
  SubnetPublicAZB:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 1, !GetAZs ]
      CidrBlock: 26.0.1.0/24
      VpcId: !Ref VPCThreeTierDemo
      Tags: 
        - Key: Name
          Value: ttd-app-public-subnet-b
  SubnetPrivateAZA:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 0, !GetAZs ]
      CidrBlock: 26.0.2.0/24
      VpcId: !Ref VPCThreeTierDemo
      Tags: 
        - Key: Name
          Value: ttd-app-app-private-subnet-a
  SubnetPrivateAZB:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 1, !GetAZs ]
      CidrBlock: 26.0.3.0/24
      VpcId: !Ref VPCThreeTierDemo
      Tags: 
        - Key: Name
          Value: ttd-app-app-private-subnet-b
  DBSubnetPrivateAZA:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 0, !GetAZs ]
      CidrBlock: 26.0.4.0/24
      VpcId: !Ref VPCThreeTierDemo
      Tags: 
        - Key: Name
          Value: ttd-db-private-subnet-a
  DBSubnetPrivateAZB:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 1, !GetAZs ]
      CidrBlock: 26.0.5.0/24
      VpcId: !Ref VPCThreeTierDemo
      Tags: 
        - Key: Name
          Value: ttd-db-private-subnet-b

# Configure Internet Gateway for VPC
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: ttd-ig
  InternetGatewayVPCAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPCThreeTierDemo
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCThreeTierDemo
      Tags:
      - Key: Name
        Value: ttd-public-route-table
  IGRoutePublicRouteTable:
    Type: AWS::EC2::Route
    DependsOn: InternetGateway
    Properties:
       RouteTableId: !Ref PublicRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId: !Ref InternetGateway
  AttachIGRoutePublicRouteTableToSubnetPublicAZA:
    DependsOn: IGRoutePublicRouteTable
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref IGRoutePublicRouteTable
      SubnetId: !Ref SubnetPublicAZA
  AttachIGRoutePublicRouteTableToSubnetPublicAZB:
    DependsOn: IGRoutePublicRouteTable
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref IGRoutePublicRouteTable
      SubnetId: !Ref SubnetPublicAZB
  
# Configure Nat Gateway for AZ A
  NATGatewayAZAEIP:
    Type: AWS::EC2::EIP
    Properties:
        Domain: vpc
  NATGatewayAZA:
   Type: AWS::EC2::NatGateway
   Properties:
      AllocationId: !GetAtt NATGatewayAZAEIP.AllocationId
      SubnetId: !Ref SubnetPublicAZA
      Tags:
      - Key: Name
        Value: ttd-nat-gateway-a
  PrivateRouteTableAZA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCThreeTierDemo
      Tags:
      - Key: Name
        Value: ttd-private-route-table-a
  RouteNATGatewayAZA:
    DependsOn: NATGatewayAZA
    Type: AWS::EC2::Route
    Properties:
        RouteTableId: !Ref PrivateRouteTableAZA
        DestinationCidrBlock: '0.0.0.0/0'
        NatGatewayId: !Ref NATGatewayAZA
  AttachNGWPrivateRouteTableToSubnetPublicAZA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateRouteTableAZA
      SubnetId: !Ref SubnetPrivateAZA

# Configure Nat Gateway for AZ B  
  NATGatewayAZABEIP:
    Type: AWS::EC2::EIP
    Properties:
        Domain: vpc
  NATGatewayAZB:
   Type: AWS::EC2::NatGateway
   Properties:
      AllocationId: !GetAtt NATGatewayAZABEIP.AllocationId
      SubnetId: !Ref SubnetPublicAZB
      Tags:
      - Key: Name
        Value: ttd-nat-gateway-b
  PrivateRouteTableAZB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCThreeTierDemo
      Tags:
      - Key: Name
        Value: ttd-private-route-table-b
  RouteNATGatewayAZB:
    DependsOn: NATGatewayAZB
    Type: AWS::EC2::Route
    Properties:
        RouteTableId: !Ref PrivateRouteTableAZB
        DestinationCidrBlock: '0.0.0.0/0'
        NatGatewayId: !Ref NATGatewayAZB
  AttachNGWPrivateRouteTableToSubnetPublicAZB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateRouteTableAZB
      SubnetId: !Ref SubnetPrivateAZB
